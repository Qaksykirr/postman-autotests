{
	"info": {
		"_postman_id": "06c1bf6f-de9a-4956-9977-802dd279c2e2",
		"name": "Final exam for reqres.in",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check total field\", function () {\r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"});\r",
							"\r",
							"pm.test(\"Check data is not empty\", function () {\r",
							"    pm.expect(jsonData.data).to.be.not.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"Check support url\", function () {\r",
							"    var host = pm.variables.get(\"host\");\r",
							"    pm.expect(jsonData.support.url).to.eql(host + \"/#support-heading\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users?page=2",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Check name field\", function () {\r",
							"    var name = pm.variables.get(\"createUserName\");\r",
							"    pm.expect(jsonData.name).to.eql(name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check id is not empty\", function () {\r",
							"    pm.expect(jsonData.id).to.be.not.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"Check createdAt is not empty\", function () {\r",
							"    pm.expect(jsonData.createdAt).to.be.not.empty;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{createUserName}}\",\r\n    \"job\": \"cat\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{deleteUserId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{deleteUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check name field\", function () {\r",
							"    var name = pm.variables.get(\"updateUserName\");\r",
							"    pm.expect(jsonData.name).to.eql(name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check updatedAt is not empty\", function () {\r",
							"    pm.expect(jsonData.updatedAt).to.be.not.empty;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{updateUserName}}\",\r\n    \"job\": \"cat\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/2",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	]
}